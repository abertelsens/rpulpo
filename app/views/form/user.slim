/ ----------------------------------------------------------------------------------------
/ FORM for a User Object
/ Uses a validation controller tirggered by changes in the uname field
/
/ last update: 2024-02-23 
/ ----------------------------------------------------------------------------------------


turbo-frame id="main_frame"

	// Center the container
	.container.screen-box.medium-form data-controller="form" 

		form[
			action="/user/#{(@object.nil? ? "new" : @object.id)}" 
			method="POST" 
			data-controller="modal form-validator" 
			data-validate-objectname="user"
			data-form-target="form"
			data-action="keydown.ctrl+enter@window->form#enter keydown.esc@window->form#escape" 
		]
			
			input name="id" type="hidden" data-validate-target="field" value=@object&.id
		
			
			/ ----------------------------------------------------------------------------------
			/ FORM HEADER
			/ ----------------------------------------------------------------------------------
			.row.u-text-center
				h3 = (@object.nil? ? "NEW USER" : "USER: #{@object.uname}")
				.alert
					i.fa-solid.fa-circle-info
					|&nbspadmin users have access to all modules 		
					
			.row
				/ --------------------------------------------------------------------------------
				/ USER DATA COLUMN
				/ --------------------------------------------------------------------------------
				.columns.six.u-text-left
					h4.u-text-center = "USER DATA"
							
					label for="uname" user name
					&text.u-full-width name="uname" required="true" data-form-target="first_field" value=@object&.uname data-action="input->form-validator#validate"

					label for="password" password
					&password.u-full-width name="password" required="true" value=@object&.password
				
					/ USER TYPES SELECT, uses the values of an enum object as defined 
					/ in the User class
					label for="usertype" user type
					select.u-full-width name="usertype"
						- User.usertypes.each do |type|
							option selected=(@object&.usertype==type[0]) value=type[0] = type[0]
				
					.div.flex-left
						input#mail type="checkbox" name="mail" checked=@object&.mail
						label for="mail" style="margin-bottom:1.5rem; margin-left:1rem" mail user
						
				/ --------------------------------------------------------------------------------
				/ PERMISSIONS COLUMN
				/ --------------------------------------------------------------------------------
				.columns.six
					h4.u-text-center = "PERMISSIONS"
					
					/ The iteration will produce a select element for each module
					- PulpoModule.all.each do |mod|
						.columns.six
							label for="module_permission[#{mod.id}]" = mod.name
							
							/ PERMISSIONS SELECT, uses the values of an enum object.
							select.u-full-width id="module_permission[#{mod.id}]" name="module[#{mod.id}]"
								- ModuleUser.modulepermissions.each do |permission|
									option[
										selected=(!@permissions.nil? && @permissions[mod.id]==permission[0])
										value=permission[0]
									] = permission[0].humanize(capitalize: false) 
								
			/ ----------------------------------------------------------------------------------
			/ ALERT FRAME
			/ ----------------------------------------------------------------------------------
			.row	
				.alert.alert-warning.hidden-frame data-form-validator-target="error_frame"
			
			/-----------------------------------------------------------------------------------
			/ BUTTONS
			/-----------------------------------------------------------------------------------
			.row.flex-center.flex-columns
				- if (@object&.can_be_deleted?)
					button.button-secondary tabindex="-1" data-action="click->form#open_modal" delete  
				
				button.button-primary type="submit" name="commit" value="save" data-form-validator-target="submit_btn" save  
				a.button.button-secondary data-form-target="cancel_btn" formnovalidate="true" href="/users" cancel
				
			turbo-frame id="delete_modal" src="/elements/delete_modal?object_type=user"